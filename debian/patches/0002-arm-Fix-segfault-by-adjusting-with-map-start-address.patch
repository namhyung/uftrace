From: Honggyu Kim <honggyu.kp@gmail.com>
Date: Mon, 29 Jul 2019 12:17:45 +0900
Subject: arm: Fix segfault by adjusting with map start address

As of now, record command always gets segfault in arm environment.
It's a regression that was introduced by the following commit.

  d8eb70b4 symbol: Use module symbol table in find_symtabs()

This patch fixes the problem by adding map start address to the
sym->addr.

Fixed: #807

Note: modified from commit 0b45c512 to apply cleanly on top of the
0.9.3 release by paul cannon <pik@debian.org>. Not 100% sure this
was done correctly.
---
 arch/arm/mcount-support.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mcount-support.c b/arch/arm/mcount-support.c
index 78dbd46..1c92bcb 100644
--- a/arch/arm/mcount-support.c
+++ b/arch/arm/mcount-support.c
@@ -264,7 +264,9 @@ unsigned long *mcount_arch_parent_location(struct symtabs *symtabs,
 	struct lr_offset lr = {
 		.offset = 0,
 	};
-	struct offset_entry *cache;
+	struct uftrace_mmap *map;
+	uint64_t map_start_addr = 0;
+	uint64_t load_addr;
 
 	sym = find_symtabs(symtabs, child_ip);
 	if (sym == NULL)
@@ -274,12 +276,13 @@ unsigned long *mcount_arch_parent_location(struct symtabs *symtabs,
 	if ((sym->addr & 1) == 0)
 		return parent_loc;
 
-	cache = lookup_cache(&offset_cache, sym->addr, false);
-	if (cache)
-		return parent_loc + cache->offset;
+	map = find_map(symtabs, child_ip);
+	if (map != NULL && map != MAP_KERNEL)
+		map_start_addr = map->start;
+	load_addr = sym->addr + map_start_addr;
 
-	pr_dbg2("copying instructions of %s\n", sym->name);
-	memcpy(buf, (void *)(long)(sym->addr & ~1), sizeof(buf));
+	pr_dbg2("copying instructions of %s from %#x\n", sym->name, load_addr);
+	memcpy(buf, (void *)(long)(load_addr & ~1), sizeof(buf));
 
 	analyze_mcount_instructions(buf, &lr);
 
